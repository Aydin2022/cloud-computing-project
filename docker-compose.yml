version: "2"

services:
  node-app:
    container_name: aydin-app-container
    ports:
      - "3003:3003"
    env_file:
      - ./.env
    depends_on:
      - mysql
      - mongo
      - redis
  
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    depends_on:
      - mongo
  redis:
    image: redis

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    ports:
      - "3307:3306"
    volumes:
      - mysql:/var/lib/mysql
      - ./mysql/init/01.sql:/docker-entrypoint-initdb.d/01.sql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: mysql
      PMA_USER: user
      PMA_PASSWORD: user
    ports:
      - "8080:80"
    depends_on:
      - mysql

volumes:
  mongo-db:
  mysql:
    driver: local
networks:
  testing_net: